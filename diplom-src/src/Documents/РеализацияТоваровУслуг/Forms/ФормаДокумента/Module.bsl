#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//ЛЕА.: Добавили команду для вызова процедуры ВыполнитьАвтозаполнение у договоров вида: Абонентское обслуживание
	//20.10.2023
	НоваяКоманда = Команды.Добавить("ЗАПОЛНИТЬ");
	НоваяКоманда.Действие = "ЗАПОЛНИТЬ";
	КомандаНаФорме = Элементы.Добавить("ЗАПОЛНИТЬ",Тип("КнопкаФормы"), Элементы.ГруппаШапкаЛево);
	КомандаНаФорме.ИмяКоманды = "ЗАПОЛНИТЬ";
	КомандаНаФорме.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КомандаНаФорме.ЦветФона = ЦветаСтиля.ЦветФонаПредупреждения;
	//ЛЕА
	
	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
   
    
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)

	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)

	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)

	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;

	РассчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()

	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");

КонецПроцедуры

#Область ПодключаемыеКоманды

//ЛЕА.: Добавили обработчик команды ЗАПОЛНИТЬ проверяем на тип договора и вызываем процедуру из модуля объекта
//20.10.2023
&НаКлиенте
Процедура ЗАПОЛНИТЬ(Команда)
	
	ТипДовора = ВидДоговора();
	
	Если ТипДовора <> Неопределено Тогда
		
	Объект.Услуги.Очистить();
		
	ЗАПОЛНИТЬНаСервере();
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗАПОЛНИТЬНаСервере()
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.ВыполнитьАвтозаполнение();
	
	Объект.Услуги.Загрузить(ДокОбъект.ВыполнитьАвтозаполнение());
	
КонецПроцедуры	


&НаСервере
Функция ВидДоговора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Договор
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Ссылка
	|	И
	|		РеализацияТоваровУслуг.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание)";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Пока Выборка.Следующий() Цикл
		
		 Результат = Выборка.Договор
		
	КонецЦикла;
	
	Возврат Результат
	
КонецФункции
//ЛЕА

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти


