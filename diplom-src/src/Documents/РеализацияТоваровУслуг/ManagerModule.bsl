#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//ЛЕА Добавили ппроцедуры печати
//22.10.2023

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт на услуги
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт'");
	КомандаПечати.Порядок = 5;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Акт");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАкта(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт";
	КонецЕсли;

КонецПроцедуры

Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПараметрыПечати_Акт";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.Номер,
		|	РеализацияТоваровУслуг.Дата,
		|	РеализацияТоваровУслуг.Организация,
		|	РеализацияТоваровУслуг.Контрагент,
		|	РеализацияТоваровУслуг.Договор,
		|	РеализацияТоваровУслуг.СуммаДокумента,
		|	РеализацияТоваровУслуг.Ответственный,
		|	РеализацияТоваровУслуг.Услуги.(
		|		НомерСтроки,
		|		Номенклатура,
		|		Количество,
		|		Цена,
		|		Сумма),
		|	ВКМ_Подписи.Печать КАК ПечатьОрганизации,
		|	ВКМ_Подписи.Подпись КАК ПодписьРуководителя
		|ИЗ
		|	Справочник.ВКМ_Подписи КАК ВКМ_Подписи
		|		ПРАВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО РеализацияТоваровУслуг.Организация = ВКМ_Подписи.Организация
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ПодписьФаксимиле = Макет.ПолучитьОбласть("ПодписьФаксимиле");
	
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы +1;

		ТабДок.Вывести(ОбластьЗаголовок);
		
		ХранилищеПодписи = Выборка.ПодписьРуководителя;
		ДвоичныеДанныеПодписи = ХранилищеПодписи.Получить();
		
		Если ДвоичныеДанныеПодписи <> Неопределено Тогда
			ПодписьФаксимиле.Рисунки.ПодписьРуководителя.Картинка = Новый Картинка(ДвоичныеДанныеПодписи);
		КонецЕсли;
		
		ХранилищеПечати = Выборка.ПечатьОрганизации;
		ДвоичныеДанныеПечати = ХранилищеПечати.Получить();
		
		Если ДвоичныеДанныеПечати <> Неопределено Тогда
			ПодписьФаксимиле.Рисунки.ПечатьОрганизации.Картинка = Новый Картинка(ДвоичныеДанныеПечати);
		КонецЕсли;
		
		Шапка.Параметры.Заполнить(Выборка);
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(Строка(Выборка.Ссылка.УникальныйИдентификатор()), 1, 120);
		
		Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Картинка = Новый Картинка(ДанныеQRКода);
			Шапка.Рисунки.ШтрихКод.Картинка = Картинка;
		КонецЕсли;	
		
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());	
		
		ТабДок.Вывести(ОбластьУслугиШапка);
		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		Пока ВыборкаУслуги.Следующий() Цикл
			ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
			ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
		КонецЦикла;
		
		
		ПараметрыПрописи = "рубль, рубля, рублей, м, Копейка, копейки, копеек, ж, 2";
		СуммаПрописная = ЧислоПрописью(Выборка.СуммаДокумента,"ДП = Истина",ПараметрыПрописи);
		Подвал.Параметры.Заполнить(Выборка);
		Подвал.Параметры.СуммаПрописная = СуммаПрописная;
		ТабДок.Вывести(Подвал);	
		
		
		
		ВставлятьРазделительСтраниц = Истина;
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	
		ТабДок.Вывести(ПодписьФаксимиле);	
	
	Возврат ТабДок;
	
КонецФункции
//ЛЕА

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда

		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(
			Метаданные.Документы.РеализацияТоваровУслуг);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;

	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти

#КонецЕсли
